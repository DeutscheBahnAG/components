version: 2

jobs:
  build-dbx-web-production:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo

    steps:
      - setup_remote_docker
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-

      - run:
          name: Setup Private GitHub Repo Access
          command: git config --global "url.https://${GITHUB_TOKEN}:@github.com.insteadOf" 'ssh://git@github.com'

      - run:
          name: Setup Private NPM Registry Access
          command: |
            npm config set //$NPM_REGISTRY/:_authToken $NPM_TOKEN
            npm config set //$NPM_REGISTRY/:always-auth true
            npm config set @bahn-x:registry https://$NPM_REGISTRY

      - run:
          name: Install Dependencies
          command: yarn

      - save_cache:
          key: yarn-packages-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Lint Code
          command: yarn lint

      - run:
          name: Run Tests
          command: yarn test

      - run:
          name: Build Static Site
          command: yarn build:docs

      - run:
          name: Build Container
          command: |
            docker build -t eu.gcr.io/web-products-production/dbx-web:$CIRCLE_SHA1 .
            docker login -u _json_key -p "$(echo $GOOGLE_AUTH|base64 -d)" https://eu.gcr.io
            docker push eu.gcr.io/web-products-production/dbx-web:$CIRCLE_SHA1

  deploy-dbx-web-production:
    docker:
      - image: eu.gcr.io/web-products-development/gcloud-build:SDK-224.0.0
        auth:
          username: _json_key
          password: $GCR_KEY_WEB_PRODUCTS_DEV
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: "Deploy to k8s"
          command: |
            openrc boot # required for the gcloud-build image to init gcloud

            echo "[Deploying deploy-dbx-web-production]"
            kubesec decrypt k8s/secrets/production.yaml | kubectl apply -f -
            kubectl set image deployment/dbx-web dbx-web=eu.gcr.io/web-products-production/dbx-web:$CIRCLE_SHA1 -n prod
            kubectl rollout status deployment/dbx-web -n prod

workflows:
  version: 2

  dbx-web-build-workflow:
    jobs:
      - build-dbx-web-production:
          context: gcloud-webproducts-prod
      - deploy-dbx-web-production:
          context: gcloud-webproducts-prod
          requires:
            - build-dbx-web-production
          filters:
            branches:
              only:
                - master

