version: 2.1

orbs:
  aws-ecr: bahnx/aws-ecr@1.0.1

executors:
  node:
    docker:
      # WARNING: Don't upgrade to node:14
      # @storybook/addon-storyshots > @storybook/core > webpack > watchpack > watchpack-chokidar2 > chokidar@2.1.8: Chokidar 2 will break on node v14+. Upgrade to chokidar 3 with 15x less dependencies.
      - image: circleci/node:12

jobs:
  install:
    executor: node
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-
      - run:
          name: Setup Private GitHub Repo Access
          command: git config --global "url.https://${GITHUB_TOKEN}:@github.com.insteadOf" 'ssh://git@github.com'
      - run:
          name: Setup Private NPM Registry Access
          command: |
            npm config set //$NPM_REGISTRY/:_authToken $NPM_TOKEN
            npm config set //$NPM_REGISTRY/:always-auth true
            npm config set @bahn-x:registry https://$NPM_REGISTRY
      - run:
          name: Install Dependencies
          command: yarn
      - save_cache:
          key: yarn-packages-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ./
          paths:
            - ./*
    working_directory: ~/dbx-web

  lint:
    executor: node
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Lint Code
          command: yarn lint
    working_directory: ~/dbx-web

  test:
    executor: node
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Run Tests
          command: yarn test
    working_directory: ~/dbx-web

  build-packages:
    executor: node
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Build
          command: yarn build
    working_directory: ~/dbx-web

  build-docs:
    executor: node
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - run:
          name: Build Static Site
          command: yarn build:docs
      - persist_to_workspace:
          root: ./
          paths:
            - ./*
    working_directory: ~/dbx-web

  build:
    docker:
      - image: $DOCKER_REGISTRY/$STAGE/cd-base:latest
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - checkout
      - attach_workspace:
          at: ./
      - aws-ecr/build-push-docker:
          image: "web/dbx-web"
    working_directory: ~/dbx-web

  deploy:
    docker:
      - image: $DOCKER_REGISTRY/$STAGE/cd-base:latest
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - run:
          name: Deploy dbx-web
          command: |
            source /bootstrap-deploy.sh

            helmfile --file deploy/helmfile.yaml --namespace web --environment $STAGE sync
    working_directory: ~/dbx-web

workflows:
  version: 2

  test-and-deploy-dev:
    jobs:
      - install:
          context: dev
          filters:
            branches:
              ignore:
                - prod
      - lint:
          context: dev
          requires:
            - install
      - test:
          context: dev
          requires:
            - install
      - build-packages:
          context: dev
          requires:
            - install
      - build-docs:
          context: dev
          requires:
            - install
      - build:
          context: dev
          filters:
            branches:
              only:
                - master
          requires:
            - lint
            - test
            - build-packages
            - build-docs
      - deploy:
          context: dev
          filters:
            branches:
              only:
                - master
          requires:
            - build

  test-and-deploy-prod:
    jobs:
      - install:
          context: prod
          filters:
            branches:
              only:
                - prod
      - lint:
          context: prod
          requires:
            - install
      - test:
          context: prod
          requires:
            - install
      - build-packages:
          context: prod
          requires:
            - install
      - build-docs:
          context: prod
          requires:
            - install
      - build:
          context: prod
          requires:
            - lint
            - test
            - build-packages
            - build-docs
      - deploy:
          context: prod
          requires:
            - build            
