@import '@bahn-x/dbx-foundation/abstracts.scss';

/**
 * 1. Setting the size avoids loosing the focus while clicking (which lets the focus ring flicker).
 * 2. Safari bugfix: Avoid subpixel shifts between the border and the SVG in case the container
 *    element is centered in a parent with uneven width. As a result the tick/dash wasnâ€™t centered
 *    within the square anymore. `1` must be use as `0` would crop the focus ring.
 */

$dbx-checkbox-size: 16px;
$dbx-checkbox-outer-size: $dbx-checkbox-size + 2 * dbx-border-width('checkbox');
$dbx-checkbox-gap: 0.4em;

.dbx-checkbox {
  align-items: flex-start;
  box-sizing: border-box;
  display: inline-flex;
  position: relative;
  user-select: none;

  input {
    @include dbx-focus-ring($target: '+ .dbx-checkbox-box', $border: true);
    height: 100%; /* 1 */
    min-height: 24px; /* 1 */
    min-width: 24px; /* 1 */
    opacity: 0;
    position: absolute;
    width: 100%; /* 1 */
    z-index: 1;
  }

  :disabled ~ * {
    color: dbx-text-color('disabled');
  }
}

.dbx-checkbox-box {
  background: dbx-background-color('checkbox');
  border: dbx-border-width('checkbox') solid;
  border-radius: 2.2px;
  box-sizing: content-box;
  flex-shrink: 0;
  height: $dbx-checkbox-size;
  position: relative;
  top: 2px;
  width: $dbx-checkbox-size;

  svg {
    display: block;
    height: inherit;
    transform: translateZ(0); /* 2 */
    width: inherit;
  }

  .dbx-checkbox:active > input:not(:disabled) + & {
    background: dbx-background-color('checkbox.pressed');
  }
}

.dbx-checkbox-checked,
.dbx-checkbox-indeterminate {
  fill: transparent;
  transform: scale(0);
  transform-origin: center;
  transition: all 0.1s cubic-bezier(0.3, 0, 0.8, 1.8);
}

:checked:not(:indeterminate) + .dbx-checkbox-box .dbx-checkbox-checked,
:indeterminate + .dbx-checkbox-box .dbx-checkbox-indeterminate {
  fill: currentColor;
  transform: scale(1);
}

.dbx-checkbox-label {
  margin-left: $dbx-checkbox-gap;

  a {
    position: relative;
    z-index: 1;
  }
}
