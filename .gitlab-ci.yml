# include
include:
  - project: bahn-x/platform/gitlab-ci-utils
    ref: main
    file: whitesource.yml

image: node:latest

# define order of stages
stages:
  - 'test'
  - 'build-packages'
  - 'build'
  - 'deploy'

# define environment-agnostic jobs
.install:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
      - .yarn
  before_script:
    - npm config set //$NPM_REGISTRY/:_authToken $NPM_TOKEN
    - npm config set //$NPM_REGISTRY/:always-auth true
    - npm config set @bahn-x:registry https://$NPM_REGISTRY
    - yarn install --cache-folder .yarn

.hadolint:
  image: hadolint/hadolint:latest-alpine
  stage: test
  script:
    - hadolint --ignore SC2039 --ignore DL3060 Dockerfile

.test:
  extends: .install
  stage: test
  script:
    - yarn test

.lint:
  extends: .install
  stage: test
  script:
    - yarn lint

.build-docs:
  stage: build-packages
  extends: .install
  artifacts:
    paths:
      - build/
  script:
    - yarn build:docs

.build-packages:
  stage: build-packages
  extends: .install
  script:
    - yarn build

.build:
  image: bahnx/cd-base:latest
  stage: build
  script:
    - /build-push-docker.sh --image=web/react

.deploy:
  image: bahnx/cd-base:latest
  stage: deploy
  script:
    - source /bootstrap-deploy.sh
    - helmfile -f deploy/helmfile.yaml --namespace web --environment $STAGE sync

# workflow definitions

# dev
hadolint-dev:
  extends: .hadolint
  tags: [dev]
  except: [prod]

test-dev:
  extends: .test
  tags: [dev]
  except: [prod]

lint-dev:
  extends: .lint
  tags: [dev]
  except: [prod]

whitesource-dev-root:
  extends: .whitesource
  tags: [dev]
  except: [beta, prod]
  variables:
    wss_javaParams: "-offline false"
    whitesource_config: wss_config.yml

whitesource-dev-react:
  extends: .whitesource
  tags: [dev]
  except: [beta, prod]
  variables:
    wss_javaParams: "-offline false"
    whitesource_config: packages/react/wss_config.yml

whitesource-dev-react-icons:
  extends: .whitesource
  tags: [dev]
  except: [beta, prod]
  variables:
    wss_javaParams: "-offline false"
    whitesource_config: packages/react-icons/wss_config.yml

whitesource-dev-react-extra:
  extends: .whitesource
  tags: [dev]
  except: [beta, prod]
  variables:
    wss_javaParams: "-offline false"
    whitesource_config: packages/react-extra/wss_config.yml

whitesource-dev-styles:
  extends: .whitesource
  tags: [dev]
  except: [beta, prod]
  variables:
    wss_javaParams: "-offline false"
    whitesource_config: packages/styles/wss_config.yml

packages-dev:
  extends: .build-packages
  tags: [dev]
  except: [prod]

docs-dev:
  extends: .build-docs
  tags: [dev]
  except: [prod]

build-dev:
  extends: .build
  variables:
    STAGE: $STAGE_DEV
    AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID_DEV
  tags: [dev]
  only:
    - main

deploy-dev:
  extends: .deploy
  tags: [dev]
  variables:
    STAGE: $STAGE_DEV
    CLUSTER_NAME: $CLUSTER_NAME_DEV
    DOCKER_REGISTRY: $DOCKER_REGISTRY_DEV
  only:
    - main

# prod
hadolint-prod:
  extends: .hadolint
  tags: [prod]
  only: [prod]

test-prod:
  extends: .test
  tags: [prod]
  only: [prod]

lint-prod:
  extends: .lint
  tags: [prod]
  only: [prod]

whitesource-prod-root:
  extends: .whitesource
  tags: [prod]
  only: [prod]
  variables:
    wss_javaParams: "-offline false"
    whitesource_config: wss_config.yml

whitesource-prod-react:
  extends: .whitesource
  tags: [prod]
  only: [prod]
  variables:
    wss_javaParams: "-offline false"
    whitesource_config: packages/react/wss_config.yml

whitesource-prod-react-icons:
  extends: .whitesource
  tags: [prod]
  only: [prod]
  variables:
    wss_javaParams: "-offline false"
    whitesource_config: packages/react-icons/wss_config.yml

whitesource-prod-react-extra:
  extends: .whitesource
  tags: [prod]
  only: [prod]
  variables:
    wss_javaParams: "-offline false"
    whitesource_config: packages/react-extra/wss_config.yml

whitesource-prod-styles:
  extends: .whitesource
  tags: [prod]
  only: [prod]
  variables:
    wss_javaParams: "-offline false"
    whitesource_config: packages/styles/wss_config.yml

packages-prod:
  extends: .build-packages
  tags: [prod]
  only: [prod]

docs-prod:
  extends: .build-docs
  tags: [prod]
  only: [prod]

build-prod:
  extends: .build
  tags: [prod]
  variables:
    STAGE: $STAGE_PROD
    AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID_PROD
  only:
    - prod

deploy-prod:
  extends: .deploy
  tags: [prod]
  variables:
    STAGE: $STAGE_PROD
    CLUSTER_NAME: $CLUSTER_NAME_PROD
    DOCKER_REGISTRY: $DOCKER_REGISTRY_PROD
  only:
    - prod
