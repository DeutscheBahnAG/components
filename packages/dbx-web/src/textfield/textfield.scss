@import '@bahn-x/dbx-foundation/abstracts.scss';

.dbx-textfield {
  @include dbx-focus-ring(
    $focus-selector: ':focus-within',
    $transition: 'border 200ms'
  );
  align-items: stretch;
  background-color: var(--dbx-secondary-background-color);
  border: dbx-border-width('input') solid var(--dbx-secondary-background-color);
  box-sizing: border-box;
  color: var(--dbx-field-secondary-text-color);
  display: inline-flex;
  font-family: dbx-font-family('copy');
  vertical-align: top;

  &:not(.dbx-textfield--disabled) {
    cursor: text;
  }

  &:not(.dbx-textfield--disabled, .dbx-textfield--focus):hover {
    border-color: var(--dbx-focus-ring-color);
  }

  /**
   * 1. Remove red shadow when validation fails (Firefox)
   */
  input,
  textarea {
    border: 0;
    background: transparent;
    box-shadow: none; /* 1 */
    color: var(--dbx-field-primary-text-color);
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    flex: 1;
    margin: 0;
    outline: 0;
  }

  input::-ms-clear {
    display: none;
  }

  ::placeholder {
    color: var(--dbx-field-secondary-text-color);
    font-style: italic;
    opacity: 0.5;
  }
}

.dbx-textfield--disabled,
.dbx-textfield--readonly {
  background: transparent;
  border-color: var(--dbx-secondary-background-color);

  input,
  textarea {
    color: var(--dbx-disabled-text-color);
  }
}

.dbx-textfield--readonly.dbx-textfield--focus {
  border-color: transparent;
}

/**
 * 2. Fixes a Safari bug not applying colors via variables when disabled
 */
.dbx-textfield--disabled {
  color: var(--dbx-disabled-text-color);
  -webkit-text-fill-color: var(--dbx-disabled-text-color); /* 2 */
}

.dbx-textfield--textarea {
  overflow: hidden;
  position: relative;

  &::before,
  &::after {
    background: linear-gradient(to top, transparent);
    bottom: 0;
    content: '';
    height: dbx-spacing('s');
    pointer-events: none;
    position: absolute;
    z-index: 1;
  }

  &::before {
    top: 0;
    transform: rotate(180deg);
  }
}

.dbx-textfield-prefix,
.dbx-textfield-suffix {
  transition: transform 0.2s;
}

.dbx-textfield__inline-label {
  pointer-events: none;
  position: absolute;
  transition: all 0.2s;
  transform-origin: 0 0;
}

/**
  * 1. Calculating the scaling from M to S.
  * 2. Prefer `scale` over `font-size` for smooth transitions.
  */
.dbx-textfield:focus-within .dbx-textfield__inline-label,
.dbx-textfield--filled .dbx-textfield__inline-label {
  $scale-down: dbx-font-size('copy', 's') / dbx-font-size('copy', 'm'); /* 1 */
  transform: scale(#{$scale-down}) translateY(-12px); /* 2 */
}

.dbx-textfield--inline-label {
  ::placeholder {
    color: transparent;
    transition: color 0.2;
  }

  &.dbx-textfield--focus ::placeholder {
    color: var(--dbx-secondary-background-color);
  }

  input,
  &.dbx-textfield--filled .dbx-textfield-prefix,
  &.dbx-textfield--filled .dbx-textfield-suffix,
  &.dbx-textfield--focus .dbx-textfield-prefix,
  &.dbx-textfield--focus .dbx-textfield-suffix {
    transform: translateY(8px);
  }
}

@each $size in (xl l m s xs) {
  .dbx-textfield--#{$size} {
    $horizontal-padding: dbx-component-horizontal-padding($size, 'input');
    $vertical-padding: dbx-component-vertical-padding($size, 'input');

    @include dbx-component-text-style($size, 'input');

    border-radius: dbx-border-radius($size);
    min-height: dbx-size($size);

    input,
    textarea,
    .dbx-textfield-prefix {
      padding-left: $horizontal-padding;
    }

    input,
    textarea,
    .dbx-textfield-suffix {
      padding-right: $horizontal-padding;
    }

    /**
      * 1. Equals a Thin Space character
      * 2. Icons/Buttons should have equal margin to the border on all sides
      */
    .dbx-textfield-prefix {
      margin-right: calc(0.15em - #{$horizontal-padding}); /* 1 */

      > * {
        display: block; /* 2 */
        margin-right: 0.15em;
        transform: translateX(#{$vertical-padding - $horizontal-padding}); /* 2 */
      }
    }

    .dbx-textfield-suffix {
      margin-left: calc(0.15em - #{$horizontal-padding}); /* 1 */

      > * {
        display: block; /* 2 */
        margin-right: 0.15em;
        transform: translateX(#{$horizontal-padding - $vertical-padding}); /* 2 */
      }
    }

    .dbx-textfield--textarea {
      &::before,
      &::after {
        left: $horizontal-padding;
        right: $horizontal-padding;
      }
    }

    .dbx-textfield__inline-label {
      margin-left: $horizontal-padding;
    }

    input,
    textarea,
    .dbx-textfield-prefix,
    .dbx-textfield-suffix,
    .dbx-textfield__inline-label {
      border-radius: dbx-border-radius($size);
      padding-bottom: $vertical-padding;
      padding-top: $vertical-padding;
    }
  }
}

/**
  * 3. Negative margins as Buttons are higher than the expected line-height
  */
.dbx-textfield {
  @each $size in (xl l m s xs) {
    .dbx-button--#{$size} {
      margin: #{(dbx-line-height('copy', 'm') - dbx-size($size)) / 2};
    }
  }
}
