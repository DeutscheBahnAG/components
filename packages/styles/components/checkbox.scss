/**
 * 1. Setting the size avoids loosing the focus while clicking (which lets the focus ring flicker).
 * 2. Safari bugfix: Avoid subpixel shifts between the border and the SVG in case the container
 *    element is centered in a parent with uneven width. As a result the tick/dash wasnâ€™t centered
 *    within the square anymore. `1` must be use as `0` would crop the focus ring.
 * 3. Avoid block links
 * 4. Optimize visual alignment (0.01em) due to different font sizes
 */

$db-checkbox-outer-size: 20px;
$db-checkbox-size: $db-checkbox-outer-size - 2 * db-border-width('checkbox');
$db-checkbox-gap: 0.5em;

.db-checkbox {
  @include db-text-style('copy', 'm');
  align-items: baseline;
  box-sizing: border-box;
  color: var(--db-primary-text-color);
  display: inline-flex;
  position: relative;
  user-select: none;

  input {
    @include db-focus-ring($target: '+ .db-checkbox__box');
    height: 100%; /* 1 */
    min-height: 24px; /* 1 */
    min-width: 24px; /* 1 */
    opacity: 0;
    position: absolute;
    width: 100%; /* 1 */
    z-index: 1;
  }

  :disabled ~ * {
    color: var(--db-disabled-text-color);
  }
}

.db-checkbox__box {
  background: var(--db-primary-background-color);
  border-radius: 2.5px;
  flex-shrink: 0;
  height: $db-checkbox-outer-size;
  position: relative;
  top: 4px;
  width: $db-checkbox-outer-size;

  svg {
    @include safari-svg-fix;
    display: block;
    height: 100%;
    position: absolute; /* 2 */
    left: 50%; /* 2 */
    transform: translateX(-50%); /* 2 */
    width: 100%;
  }
}

.db-checkbox__background {
  fill: var(--db-primary-background-color);
  stroke: currentColor;
  x: -1px;
  y: -1px;
  width: 18px;
  height: 18px;
  stroke-width: 2px;

  /* stylelint-disable-next-line selector-max-compound-selectors */
  .db-checkbox:active > input:not(:disabled):not(:checked) + .db-checkbox__box & {
    fill: var(--db-darker-background-color);
  }
}

.db-checkbox__checked,
.db-checkbox__indeterminate {
  fill: transparent;
  transform: scale(0);
  transform-origin: center;
  transition: all 0.1s cubic-bezier(0.3, 0, 0.8, 1.8);
}

:indeterminate + .db-checkbox__box .db-checkbox__indeterminate {
  fill: currentColor;
  transform: scale(1);
}

:checked:not(:indeterminate) + .db-checkbox__box .db-checkbox__checked {
  fill: var(--db-checkbox-tick-color);
  transform: scale(1);
}

:checked:disabled:not(:indeterminate) + .db-checkbox__box .db-checkbox__checked {
  fill: var(--db-primary-background-color);
}

:active:indeterminate:not(:disabled) + .db-checkbox__box .db-checkbox__indeterminate,
:active:checked:not(:indeterminate):not(:disabled) + .db-checkbox__box .db-checkbox__checked {
  transform: scale(0.9);
}

:checked:disabled + .db-checkbox__box .db-checkbox-checked {
  fill: var(--db-primary-button-disabled-text-color);
}

:checked:not(:indeterminate) + .db-checkbox__box .db-checkbox__background {
  fill: currentColor;
}

:disabled + .db-checkbox__box {
  color: var(--db-primary-button-disabled-background-color);
}

.db-checkbox__label {
  @include db-form-input-label;
  margin-left: $db-checkbox-gap;
}

.db-checkbox__footer {
  @include db-form-input-footer;
  margin-left: calc(#{$db-checkbox-outer-size} + #{$db-checkbox-gap} + 0.1em)
}
