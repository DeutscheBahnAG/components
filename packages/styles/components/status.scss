.db-status {
  @include db-text-style('copy', 's');
  align-items: baseline;
  display: inline-flex;
  color: var(--db-primary-text-color);

  svg {
    $icon-safe-area: 2px;
    @include safari-svg-fix;
    flex-shrink: 0;
    height: db-icon-size('s');
    margin: 0 db-spacing('xs') 0 #{-$icon-safe-area - 1px};
    position: relative;
    top: 5px;
    width: db-icon-size('s');
  }

  path {
    fill: var(--db-informative-on-background-color);
  }

  /* stylelint-disable-next-line selector-no-qualifying-type */
  path[stroke-width] {
    fill: transparent;
    stroke: var(--db-informative-on-background-color);
    stroke-linecap: round;
    stroke-linejoin: round;
  }

  circle {
    fill: var(--db-informative-background-color);
  }

  circle + circle {
    fill: var(--db-informative-on-background-color);
  }
}

.db-status--success {
  path {
    stroke: var(--db-success-on-background-color);
  }

  circle {
    fill: var(--db-success-background-color);
  }

  circle + circle {
    fill: var(--db-success-on-background-color);
  }
}

.db-status--warning,
.db-status--error {
  path {
    stroke-width: 2.1;
  }
}

.db-status--error,
.db-status--fatal {
  color: var(--db-warning-color);
  font-weight: 550;

  path {
    stroke: var(--db-warning-on-background-color);
  }

  circle {
    fill: var(--db-warning-background-color);
  }

  circle + circle {
    fill: var(--db-warning-on-background-color);
  }
}

.db-status--unknown,
.db-status--not-applicable {
  color: var(--db-secondary-text-color);
}

.db-status__message {
  display: inline-block;
}
